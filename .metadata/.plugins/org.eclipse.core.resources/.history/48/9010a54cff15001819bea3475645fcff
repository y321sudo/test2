package com.internousdev.yukazon.dao;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Map;

import com.internousdev.yukazon.util.DBConnector;

public class UserCreateConfirmDAO {
//ユーザー情報取得元データベース"db"
	private DBConnector db = new DBConnector();
//"db"に接続する"con"
	private Connection con = db.getConnection();
//resultに初期値falseを代入
	private boolean result =false;
//ユーザー登録情報を格納しておくMap
	public Map<String, Object> session;

/**
 * ↓ユーザ情報取得メソッド(getUserInfo)!!!!!!!!!!!!!!!
 *UserCreateConfirmActionに呼ばれている
 * @param loginUserId
 * @param loginPassword
 * @return result
 */
//UserCreate.jspで入力した"loginUserId"と"loginPassword"を当てはめる
	public boolean getUserInfo(String loginUserId, String loginPassword){
//↓sqlにある"login_user_transaction"テーブルを"sql"に代入
		String sql="SELECT * FROM login_user_transaction";
		try{
//↓上の"sql"に接続することを"ps"に代入
			PreparedStatement ps = con.prepareStatement(sql);
//↓接続実行した事を"rs"に代入
			ResultSet rs = ps.executeQuery();
//
			while(rs.next()){
//↓2.loginIdに代入     ↓1.当てはめた"login_id"カラムを呼び出して
				String loginId = rs.getString("login_id");
				String password = rs.getString("login_pass");
//↓もし当てはめたloginID又はpasswordが等しくなかったら
				if(loginId.equals(loginUserId) || password.equals(loginPassword)){
//↓もしloginId
					if(loginId.equals(loginUserId)){
						result = false;
						return result;
					}else{
						result = true;
					}

				}else{
					result = true;
				}
			}
//↓例外が起きて"sql"に接続できなかったら
		}catch(Exception e){
//↓標準例外メソッドの"printStackTrace"を呼び出す
			e.printStackTrace();
		}
//↓try,catchの結果を"result"に格納
		return result;
	}

//sessionはprivateにしているため呼び出せるようにしておく
	public Map<String, Object> getSession(){
		return session;
	}
	public void setSession(Map<String, Object> session){
		this.session=session;
	}
}
}
